# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WUProtos/Data/Haptic.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='WUProtos/Data/Haptic.proto',
  package='WUProtos.Data',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1aWUProtos/Data/Haptic.proto\x12\rWUProtos.Data\"\x9b\x01\n\x06Haptic\x12\x17\n\x0fioswait_timings\x18\x01 \x03(\x05\x12\n\n\x02id\x18\x02 \x01(\t\x12\x17\n\x0fioshaptic_types\x18\x03 \x03(\x05\x12\x1c\n\x14\x61ndroid_wait_timings\x18\x04 \x03(\x05\x12\x1a\n\x12\x61ndroid_amplitudes\x18\x05 \x03(\x05\x12\x19\n\x11\x61ndroid_durations\x18\x06 \x03(\x05\x62\x06proto3')
)




_HAPTIC = _descriptor.Descriptor(
  name='Haptic',
  full_name='WUProtos.Data.Haptic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ioswait_timings', full_name='WUProtos.Data.Haptic.ioswait_timings', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id', full_name='WUProtos.Data.Haptic.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ioshaptic_types', full_name='WUProtos.Data.Haptic.ioshaptic_types', index=2,
      number=3, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='android_wait_timings', full_name='WUProtos.Data.Haptic.android_wait_timings', index=3,
      number=4, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='android_amplitudes', full_name='WUProtos.Data.Haptic.android_amplitudes', index=4,
      number=5, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='android_durations', full_name='WUProtos.Data.Haptic.android_durations', index=5,
      number=6, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=201,
)

DESCRIPTOR.message_types_by_name['Haptic'] = _HAPTIC
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Haptic = _reflection.GeneratedProtocolMessageType('Haptic', (_message.Message,), dict(
  DESCRIPTOR = _HAPTIC,
  __module__ = 'WUProtos.Data.Haptic_pb2'
  # @@protoc_insertion_point(class_scope:WUProtos.Data.Haptic)
  ))
_sym_db.RegisterMessage(Haptic)


# @@protoc_insertion_point(module_scope)
