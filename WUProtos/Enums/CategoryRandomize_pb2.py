# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WUProtos/Enums/CategoryRandomize.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='WUProtos/Enums/CategoryRandomize.proto',
  package='WUProtos.Enums',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n&WUProtos/Enums/CategoryRandomize.proto\x12\x0eWUProtos.Enums*a\n\x11\x43\x61tegoryRandomize\x12\x1c\n\x18\x43\x41TEGORY_RANDOMIZE_UNSET\x10\x00\x12\x12\n\x0eRANDOMIZE_LENS\x10\x01\x12\x1a\n\x16RANDOMIZE_FILTER_FRAME\x10\x02\x62\x06proto3')
)

_CATEGORYRANDOMIZE = _descriptor.EnumDescriptor(
  name='CategoryRandomize',
  full_name='WUProtos.Enums.CategoryRandomize',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CATEGORY_RANDOMIZE_UNSET', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANDOMIZE_LENS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANDOMIZE_FILTER_FRAME', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=58,
  serialized_end=155,
)
_sym_db.RegisterEnumDescriptor(_CATEGORYRANDOMIZE)

CategoryRandomize = enum_type_wrapper.EnumTypeWrapper(_CATEGORYRANDOMIZE)
CATEGORY_RANDOMIZE_UNSET = 0
RANDOMIZE_LENS = 1
RANDOMIZE_FILTER_FRAME = 2


DESCRIPTOR.enum_types_by_name['CategoryRandomize'] = _CATEGORYRANDOMIZE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


# @@protoc_insertion_point(module_scope)
