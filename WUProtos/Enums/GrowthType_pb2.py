# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: WUProtos/Enums/GrowthType.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='WUProtos/Enums/GrowthType.proto',
  package='WUProtos.Enums',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1fWUProtos/Enums/GrowthType.proto\x12\x0eWUProtos.Enums*Q\n\nGrowthType\x12\x15\n\x11GROWTH_TYPE_UNSET\x10\x00\x12\n\n\x06LINEAR\x10\x01\x12\x0f\n\x0bLOGARITHMIC\x10\x02\x12\x0f\n\x0b\x45XPONENTIAL\x10\x03\x62\x06proto3')
)

_GROWTHTYPE = _descriptor.EnumDescriptor(
  name='GrowthType',
  full_name='WUProtos.Enums.GrowthType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GROWTH_TYPE_UNSET', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LINEAR', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOGARITHMIC', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPONENTIAL', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=51,
  serialized_end=132,
)
_sym_db.RegisterEnumDescriptor(_GROWTHTYPE)

GrowthType = enum_type_wrapper.EnumTypeWrapper(_GROWTHTYPE)
GROWTH_TYPE_UNSET = 0
LINEAR = 1
LOGARITHMIC = 2
EXPONENTIAL = 3


DESCRIPTOR.enum_types_by_name['GrowthType'] = _GROWTHTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


# @@protoc_insertion_point(module_scope)
